 4. Создать внешний репозиторий c названием JSON.cd
github.com -> New -> имя JSON; 'v'-public; 'v' -Add a README file -> Create repository -> Code -> HTTPS/SSH -> copy 
 5. Клонировать репозиторий JSON на локальный компьютер.
git clone git@github.com:Alex7mur/JSON.git
 6. Внутри локального JSON создать файл “new.json”.
vim new.json -> esc -> :wq
 7. Добавить файл под гит.
git add new.json
 8. Закоммитить файл.
git commit -m "add new.json"
 9. Отправить файл на внешний GitHub репозиторий.
git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
vim new.json -> заполнение -> esc -> :wq
 11. Отправить изменения на внешний репозиторий.
git commit -am "filling new.json"
git push
 12. Создать файл preferences.json
vim preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
vim preferences.json -> write -> esc -> :wq
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
vim sklls.json -> заполнение -> esc -> :wqadd
 15. Отправить сразу 2 файла на внешний репозиторий.
git add .
git commit -m "add preferences.json + sklls.json"
git push
 16. На веб интерфейсе создать файл bug_report.json.
https://github.com/Alex7mur/JSON -> add file -> Create new file -> bug_report.json
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
commin new file
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
выбрать файл -> Edit this file -> заполнение 
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
-> commit changes
 20. Синхронизировать внешний и локальный репозиторий JSON
git pull
